import React, { useState } from "react";
import { ConnectButton } from "@rainbow-me/rainbowkit";
import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { useAccount, usePrepareContractWrite, useContractWrite } from "wagmi";
import { parseUnits } from "viem";
import Image from "next/image";
import metamask from "../assets/images/Metamask-icon.png";

import WasteProcessingSystemAbi from "../assets/WasteProcessingSystemAbi/WasteProcessingSystem.json";

const Home = () => {
  const [textId, setTextId] = useState("0");
  const handleId = (e: any) => setTextId(e.target.value);
  const { address } = useAccount();
  const wasteDataAdress = "0x0668C35dCFc96EA6C209d5Ef4981CEd225CC642c";
  const [nameWasteAdd, setNameWasteAdd] = useState("");
  const handleName = (e: any) => setNameWasteAdd(e.target.value);
  const [typeWasteAdd, setTypeWasteAdd] = useState("");
  const handleType = (e: any) => setTypeWasteAdd(e.target.value);
  const [weightWasteAdd, setWeightWasteAdd] = useState("");
  const handleweight = (e: any) => setWeightWasteAdd(e.target.value);
  const [sourceWasteAdd, setSourceWasteAdd] = useState("");
  const handleSource = (e: any) => setSourceWasteAdd(e.target.value);
  const [amountWasteAdd, setAmountWasteAdd] = useState("");
  const handleAmount = (e: any) => setAmountWasteAdd(e.target.value);
  const [costWasteAdd, setCostWasteAdd] = useState("");
  const handleCost = (e: any) => setCostWasteAdd(e.target.value);
  const [peopleWasteAdd, setPeopleWasteAdd] = useState("");
  const handlePeople = (e: any) => setPeopleWasteAdd(e.target.value);

  const { config: wasteDataAdd } = usePrepareContractWrite({
    address: wasteDataAdress,
    abi: WasteProcessingSystemAbi.abi as any,
    functionName: "addWastes",
    args: [
      textId,
      String(nameWasteAdd),
      String(typeWasteAdd),
      String(weightWasteAdd),
      String(sourceWasteAdd),
      String(amountWasteAdd),
      String(costWasteAdd),
      String(peopleWasteAdd),
    ],
  });
  const { write: wasteDataWriteAdd } = useContractWrite(wasteDataAdd);
  console.log(wasteDataAdd);
  console.log(wasteDataWriteAdd);

  return (
    <div className={styles.container}>
      <Head>
        <title>Sistem Pengelolaan Limbah</title>
        <meta
          content="Generated by @rainbow-me/create-rainbowkit"
          name="description"
        />
      </Head>
      <main className={styles.main}>
        <ConnectButton />
        <Image 
        src={metamask}
        alt="metamask"
        height={100}
        className={styles.metamaskLogo}/>
        <h1 className={styles.title}>
          Selamat Datang di Sistem Pengelolaan Limbah
        </h1>
        
        <form className={styles.form}>
          <label>ID : </label>
          <input
            type="number"
            min="0"
            value={textId.toString()}
            // onChange={(e) => setTextId(e.target.value)}
            onChange={handleId}
          />
          <label>Nama Limbah : </label>
          <input
            type="text"
            placeholder="Masukkan Nama Limbah"
            value={nameWasteAdd.toString()}
            // onChange={(e) => setNameWasteAdd(e.target.value)}
            onChange={handleName}
          />
          <label>Jenis Limbah : </label>
          <input
            type="text"
            placeholder="Masukkan Jenis Limbah"
            value={typeWasteAdd.toString()}
            // onChange={(e) => setTypeWasteAdd(e.target.value)}
            onChange={handleType}
          />
          <label>Berat Limbah : </label>
          <input
            type="text"
            placeholder="Masukkan Berat Limbah "
            value={weightWasteAdd.toString()}
            // onChange={(e) => setWeightWasteAdd(e.target.value)}
            onChange={handleweight}
          />
          <label>Sumber Limbah : </label>
          <input
            type="text"
            placeholder="Masukkan Sumber Limbah"
            value={sourceWasteAdd.toString()}
            // onChange={(e) => setSourceWasteAdd(e.target.value)}
            onChange={handleSource}
          />
          <label>Jumlah Limbah : </label>
          <input
            type="text"
            placeholder="Masukkan Jumlah Limbah"
            value={amountWasteAdd.toString()}
            // onChange={(e) => setAmountWasteAdd(e.target.value)}
            onChange={handleAmount}
          />
          <label>Biaya Pengelolaan Limbah : </label>
          <input
            type="text"
            placeholder="Masukkan Biaya"
            value={costWasteAdd.toString()}
            // onChange={(e) => setCostWasteAdd(e.target.value)}
            onChange={handleCost}
          />
          <label>Pihak Penyalur Limbah : </label>
          <input
            type="text"
            placeholder="Masukkan Pihak"
            value={peopleWasteAdd.toString()}
            // onChange={(e) => setPeopleWasteAdd(e.target.value)}
            onChange={handlePeople}
          />
          <button type="submit" onClick={wasteDataWriteAdd}>
            Submit
          </button>
        </form>
        {/* <div>
          <h1>Cari Limbah </h1>
          <label>ID Limbah : </label>
          <input type="text" placeholder="Masukkan ID" />
        </div> */}
      </main>
      <footer className={styles.footer}>
        <p>Made with @Bima Jadiva</p>
      </footer>
    </div>
  );
};

export default Home;
